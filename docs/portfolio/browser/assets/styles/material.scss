// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "@angular/material" as mat;
@use './icon' as icon;
@use './button' as button;
@use './tool_bar' as toolbar;

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Palette
$primary: (
  100: #495057,
  700: #212529, 
  contrast: (
    700: #fffafa
  )
);

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$portfolio-primary: mat.define-palette($primary, 700);
$portfolio-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$portfolio-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$portfolio-theme: mat.define-light-theme(
  (
    color: (
      primary: $portfolio-primary,
      accent: $portfolio-accent,
      warn: $portfolio-warn,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($portfolio-theme);
@include icon.theme($portfolio-theme);
@include button.theme($portfolio-theme);
@include toolbar.theme($portfolio-theme);
